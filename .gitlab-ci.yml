before_script:
  - export KUBECTL_CONFIG=`eval echo '$'"KUBECTL_CONFIG_$(echo ${CI_COMMIT_REF_NAME} |sed 's/[\/,-]/_/g' |tr a-z A-Z)"` 
  - export PROJECT_IMAGE_REPOSITORIES="${IMAGES_REPO}"/"${IMAGES_REPOSITORIES}"/"${CI_PROJECT_NAME}" 
  - export PROJECT_IMAGE="${PROJECT_IMAGE_REPOSITORIES}:${CI_COMMIT_REF_NAME//\//-}-$CI_PIPELINE_ID"	

# cache go dependencies
.go-cache:
  variables:
    GOPATH: $CI_PROJECT_DIR/.go
  before_script:
    - mkdir -p .go
  cache:
    paths:
      - .go/pkg/mod

stages:
  - test
  - build
  - deploy

test:
  tags:
    - hk-runner
  stage: test
  image: golang:1.17-stretch
  extends: .go-cache
  script:
    - echo "test start ---------"
    - go mod download
    - go test -v -coverprofile cover.out ./...
    - go tool cover -html=cover.out -o cover.html
    -  go tool cover -func cover.out | grep total
    - echo "test end -----------"
  coverage: '/total:\t+\(statements\)\t+(\d+\.\d+)%/'
  only:
    - /^dev/.*$/

build:
  tags:
    - kaniko-build
  stage: build
  # variables:
  #  BUILD_ARGS: "--build-arg CI_COMMIT_SHORT_SHA=${CI_COMMIT_SHORT_SHA} --build-arg DEPLOY_ENV='production-realihub'" # 前端项目取消本行注释(cms-web不需要取消)
  image: "${DEPLOY_IMAGE}"
  script:
    - mkdir -p /kaniko/.docker;  mkdir /tmp 
    - export PROJECT_IMAGE_MD5="${PROJECT_IMAGE_REPOSITORIES}:`sh ${SHELL_GET_CODE_MD5}`"
    - echo "{\"auths\":{\"${IMAGES_REPO}\":{\"auth\":\"$(printf "%s:%s" "${IMAGES_REPO_USER}" "${IMAGES_REPO_PASSWD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - echo "FROM ${PROJECT_IMAGE_MD5}">/tmp/Dockerfile
    - |-
      echo "FROM ${PROJECT_IMAGE_MD5}">/tmp/Dockerfile; \
      /kaniko/executor   --context "${CI_PROJECT_DIR}" --dockerfile "/tmp/Dockerfile" --destination "${PROJECT_IMAGE}" || \
      (echo "First build"; \
      /kaniko/executor --context "${CI_PROJECT_DIR}" ${BUILD_ARGS} --dockerfile "${CI_PROJECT_DIR}/Dockerfile" --destination "${PROJECT_IMAGE_MD5}" &&  \
      echo "FROM ${PROJECT_IMAGE_MD5}">/tmp/Dockerfile; \
      /kaniko/executor --context "${CI_PROJECT_DIR}" --dockerfile "/tmp/Dockerfile" --destination "${PROJECT_IMAGE}")

    # build migrate image for db migrations
    - /kaniko/executor --context "${CI_PROJECT_DIR}" ${BUILD_ARGS} --dockerfile "${CI_PROJECT_DIR}/Dockerfile_migrate" --destination "${PROJECT_IMAGE_MD5}_migrate"
  only:
    - /^dev/.*$/

deploy:
  tags:
    - deploy
  image: "${RUN_IMAGE}"
  stage: deploy
  script:
    - cat ${KUBECTL_CONFIG} > /root/.kube/config                 
    - kubectl set image deployment/${CI_PROJECT_NAME} ${CI_PROJECT_NAME}=${PROJECT_IMAGE} -n ${PROJECT_NAMESPACE}
    - kubectl rollout status deployment/${CI_PROJECT_NAME} --timeout=3m -n ${PROJECT_NAMESPACE}|| (kubectl rollout undo deployment/${CI_PROJECT_NAME} -n ${PROJECT_NAMESPACE}  && exit 1) 
  only:
    - /^dev/.*$/
 
after_script:
  - sh "${SHELL_AFTER}"


# test:
#   stage: test
#   script:
    
#     - echo "RUN User ${GITLAB_USER_LOGIN}(${GITLAB_USER_NAME})"
#     - echo "RUN Branch ${CI_COMMIT_REF_NAME}"
#     - sh    ${SHELL_CHECK_BRANCH}
#     - echo "单元测试.... "
#   only:
#     - /^dev/.*$/
#     - /^test/.*$/
#     - /^pre/.*$/
#     - /^pro/.*$/
#     - /^reserve/.*$/
